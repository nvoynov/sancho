# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration
AllCops:
  TargetRubyVersion: 3.4.X
  DisableByDefault: true
  Exclude:
    - 'test/**/*'

Style:
  Enabled: true

# the codebase desing provides bunch of mappers and interactors
#   that are actually "method"-like thing that have only one method
#   and it "call"
# TODO: inspect on Proc#[] and [] for only-one-method classes
Style/LambdaCall:
  Enabled: false

# was spoted in Data constructors, where the constructor
#   use the same arguments order as is was defined
Style/KeywordParametersOrder:
  Enabled: false

# fail used intentionally to show that partilcular exeptions
#   are not rescued/handled in the context of the fail call
#   some obsolete consideration could be fund by link
#   https://stackoverflow.com/questions/31937632/fail-vs-raise-in-ruby-should-we-really-believe-the-style-guide
Style/SignalException:
  Enabled: false

# it's mainly ?\n that is one symbol shorter than "\n" with no necessity to wrap in ""
Style/CharacterLiteral:
  Enabled: false
  
# thats ridiculous cause many standard thing do not follow it
#   have one simple string now do not mean it will simple string
#   forever.. maybe for require/require_relative, but not everywhere 
Style/StringLiterals:
  Enabled: false

# there are a few modules used like classes; I like it simplicity
Style/ModuleFunction:
  Enabled: false

# # interfactor do not inlcude entities, not mixed-it-in but just
# #   use shorter names withot the necessity Dog::Entitiies::Blob
# #   just Blob
# Style/MixinUsage:
#   Enabled: false

# not always fit my style mapping some string than adding ?\n
# TODO: maybe change some style
Style/StringConcatenation:
  Enabled: false

# some abstract classes require such arguments
# TODO: explore RuboCop further, maybe mark abstract stuff
Lint/UnusedMethodArgument:
  Enbale: false

Metrics:
  Enabled: false
  
Layout:
  Enabled: false
